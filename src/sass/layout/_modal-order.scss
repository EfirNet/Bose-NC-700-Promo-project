.backdrop {
  position: fixed;
  top: 0;
  left: 0;

  width: 100%;
  height: 100%;
  background-color: rgba(210, 210, 210, 0.512);

  opacity: 1;
  visibility: visible;
  transition: opacity 250ms $cubic-bezier, visibility 250ms $cubic-bezier;

  &.is-hidden {
    opacity: 0;
    pointer-events: none;
    visibility: hidden;
  }

  @media screen and(max-width: 767px) {
    padding-top: 93px;
    padding-bottom: 94px;
    padding-left: 15px;
    padding-right: 15px;
    overflow-y: scroll;
  }
}

.modal {
  position: relative;

  padding: 50px 40px;

  background-color: $background-color;

  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),
    0px 2px 1px rgba(0, 0, 0, 0.2);
  border-radius: 4px;

  .backdrop.is-hidden & {
    transform: translate(-50%, -50%) scale(1.1);
  }

  @media screen and (min-width: $tablet) {
    position: absolute;
    top: 50%;
    left: 50%;

    transform: translate(-50%, -50%) scale(1);
    transition: transform 250ms $cubic-bezier;

    width: 450px;
    height: 600px;
  }

  @media screen and (min-width: $desctop) {
    width: 600px;
  }
}

.modal__btn {
  position: absolute;
  top: 8px;
  right: 8px;

  transition: fill 250ms $cubic-bezier;
  @include centered-flex();

  margin: 0;
  padding: 0;
  width: 30px;
  height: 30px;
  border: none;
  background-color: transparent;
  cursor: pointer;
  fill: $button-text-color;

  &:hover,
  &:focus {
    fill: $accent-color;
  }
}

.modal-btn__icon {
  fill: currentColor;
}

// Form

.form {
  display: flex;
  flex-direction: column;
}

.item-wrapper {
  display: flex;
  flex-direction: column;

  margin-bottom: 50px;
}

.form__group {
  position: relative;
  padding: 15px 0 0;
  margin-top: 10px;
  width: 100%;
}

.form__field {
  resize: none;
  width: 100%;
  border: 0;
  border-bottom: 2px solid rgb(255 255 255 / 0.1);
  outline: 0;
  font-size: 16px;
  color: #fff;
  padding: 7px 0;
  background: transparent;
  transition: border-color 250ms $cubic-bezier;

  &::placeholder {
    color: transparent;
  }

  &:placeholder-shown ~ .form__label {
    font-size: 16px;
    cursor: text;
    top: 20px;
  }
}

.form__label {
  position: absolute;
  top: 0;
  display: block;
  transition: 250ms $cubic-bezier;
  font-size: 14px;
  color: #9b9b9b;
}

.form__field:focus {
  ~ .form__label {
    position: absolute;
    top: -3px;
    display: block;
    transition: 250ms $cubic-bezier;
    font-size: 14px;
    color: $accent-color;
    font-weight: 700;
  }
  padding-bottom: 6px;
  font-weight: 700;
  border-width: 3px;
  border-image: linear-gradient(to right, $accent-color, $accent-color);
  border-image-slice: 1;
}
/* reset input */
.form__field {
  &:required,
  &:invalid {
    box-shadow: none;
  }
}

// Checkbox

.form-check {
  margin-bottom: 70px;
}
.form-check__item {
  @include centered-flex();
}
.form-check__field {
  position: absolute;
  appearance: none;
}
.icon-box {
  position: relative;
  display: block;
  margin-right: 8px;

  width: 30px;
  height: 28px;

  border: 2px solid $text-color;
  cursor: pointer;
}

.form__icon {
  display: none;
  position: absolute;
  top: -5px;
  right: -5px;
}

.form-check__field:checked + .icon-box .form__icon {
  display: block;
}

.form-check__desrciption {
  font-size: 16px;
  line-height: 1.62;
  color: #e9edfa;
}
.form-check__link {
  text-decoration: underline;
  text-underline-offset: 3px;

  &:hover,
  &:focus {
    color: $accent-color;
  }
}
// .form__btn {
//   padding: 22px 0;
//   width: 100%;

//   font-size: 20px;
//   line-height: 1.25;
//   text-align: center;
//   letter-spacing: 0.02em;
//   text-transform: uppercase;
// }

.form__btn {
  cursor: pointer;
  background: none;
  border: 0;
  box-sizing: border-box;
  margin: 1em;
  padding: 1em 2em;

  box-shadow: inset 0 0 0 2px $accent-color;
  color: $button-text-color;
  font-size: inherit;
  font-weight: 700;

  position: relative;
  vertical-align: middle;

  &::before,
  &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
  }
}

.draw {
  transition: color 0.25s;

  &::before,
  &::after {
    // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
    border: 2px solid transparent;
    width: 0;
    height: 0;
  }

  // This covers the top & right borders (expands right, then down)
  &::before {
    top: 0;
    left: 0;
  }

  // And this the bottom & left borders (expands left, then up)
  &::after {
    bottom: 0;
    right: 0;
  }

  &:hover,
  &:focus {
    color: $button-text-color;
  }

  // Hover styles
  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }

  &:hover::before {
    border-top-color: $button-text-color; // Make borders visible
    border-right-color: $button-text-color;
    transition: width 0.25s ease-out,
      // Width expands first
      height 0.25s ease-out 0.25s; // And then height
  }

  &:hover::after {
    border-bottom-color: $button-text-color; // Make borders visible
    border-left-color: $button-text-color;
    transition: $button-text-color border-color 0s ease-out 0.5s,
      // Wait for ::before to finish before showing border
      width 0.25s ease-out 0.5s,
      // And then exanding width
      height 0.25s ease-out 0.75s; // And finally height
  }
}

// Inherits from .draw
.meet {
  &:hover,
  &:focus {
    color: $accent-color;
  }

  // Start ::after in same position as ::before
  &::after {
    top: 0;
    left: 0;
  }

  // Change colors
  &:hover::before {
    border-top-color: $button-text-color;
    border-right-color: $button-text-color;
  }

  &:hover::after {
    border-bottom-color: $button-text-color;
    border-left-color: $button-text-color;
    transition: // Animate height first, then width
      height 0.25s ease-out, width 0.25s ease-out 0.25s;
  }
}
